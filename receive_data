
function varargout = frequency_response1(varargin)
% FREQUENCY_RESPONSE1 MATLAB code for frequency_response1.fig
%      FREQUENCY_RESPONSE1, by itself, creates a new FREQUENCY_RESPONSE1 or raises the existing
%      singleton*.
%
%      H = FREQUENCY_RESPONSE1 returns the handle to a new FREQUENCY_RESPONSE1 or the handle to
%      the existing singleton*.
%
%      FREQUENCY_RESPONSE1('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in FREQUENCY_RESPONSE1.M with the given input arguments.
%
%      FREQUENCY_RESPONSE1('Property','Value',...) creates a new FREQUENCY_RESPONSE1 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before frequency_response1_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to frequency_response1_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help frequency_response1

% Last Modified by GUIDE v2.5 20-May-2015 15:47:41

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @frequency_response1_OpeningFcn, ...
                   'gui_OutputFcn',  @frequency_response1_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before frequency_response1 is made visible.
function frequency_response1_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to frequency_response1 (see VARARGIN)

% Choose default command line output for frequency_response1
handles.output = hObject;
x=imread('boat.bmp');
N=length(x);
fmax=255;
[X,Y]=size(x);
b=zeros(X,Y);
%Calcul du pas de quantification
q=fmax/N;
%Calcul des valeurs quantifiées
for i=1:X
    for j=1:Y
        if x(i,j)~=fmax
            k=floor(x(i,j)/q);
        else
            k=N-1;
        end
        b(i,j)=(k+1/2)*q;
    end
end
b=b/255; %pour affichage l'image quantifiée
E=0;
for i1 = 1:256,
    for i2 = 1: 256,
        a=x(i1,i2);%1ère image
        a2 = b(i1,i2);
        E=E+(double(a)-double(a2))^2;%la somme d'erreur
    end;
    EQM = E*(1/(i1*i2)); %la moyenne d'erreur
end;
psnr=(10*log((255^2)/(EQM)));%calcul de peak signal noise ratio
set(handles.edit4,'String',psnr);

%err=strcmp(x, x);% comparer les data émises  et data reçues en binaire et
%afficher (1) si les elements sont les memes et (0) s'ils sont différents%



x=dec2bin(x);%pour rendre l'image émise en binaire
b=dec2bin(b);%pour rendre l'image reçue en binaire



[M1,N1]=size(x);%definir la taille_ligne et taille_colonne
bit_error=0;
for i=1:M1
    for k=1:N1
        if x(i,k)~=x(i,k)% si les images sont différentes faire%
         bit_error=bit_error+1;
        end
    end
end
  
   
  bit_emis=M1*N1;
  Ber=(10*log(bit_error/bit_emis));%calcul de taux d'erreurs binaires
  set(handles.Trber,'String',Ber);% affichage de Ber en dB

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes frequency_response1 wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = frequency_response1_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in Pbreceivedata.
function Pbreceivedata_Callback(hObject, eventdata, handles)

axes(handles.axes1);
x=imread('boat.bmp');
% guidata(hObject,handles);
% if strfind(x,'bmp')> 0
% imshow(x);%affichage de l'image
% elseif strfind(x,'mp3')> 0
%     [z,f]=audioread(x);
%     pl=audioplayer(z,f);
%     handles.pl=pl;
%     resume(pl);
%     guidata(hObject,handles);
% elseif strfind(x,'avi')> 0
%     
%     [z,f]=audioread(x);
%     pl=audioplayer(z,f);
%     handles.pl=pl;
%     resume(pl);
%     guidata(hObject,handles);
%  end;

x=abs(fft(x));
axes(handles.axes2);
% Fs = 32e3;   
% nfft = 2^nextpow2(length(x));
% Pxx = abs(fft(x,nfft)).^2/length(x)/Fs;
% % Create a single-sided spectrum
% Hpsd = dspdata.psd(Pxx(1:length(Pxx)/2),'Fs',Fs);  
% plot(Hpsd);
fmin=1.95*(10^9);% fréquence minimale donnée
fmax=2.25*(10^9);%fréquence maximale donnée
Fe=(fmax-fmin)/length(x);% fréquence d'échantillage
f=fmin:Fe:fmax-Fe;% l'axe fréquentiel
plot(f,x)
%Reponse impulsionnelle
axes(handles.axes4);
x1=abs(ifft(x));
t=0:1/Fe:1/Fe*(length(x)-1);% l'axe temporel
%stem(t,x1)
plot(t,x1)


% --- Executes on button press in Pbblackwhite.
function Pbblackwhite_Callback(hObject, eventdata, handles)
axes(handles.axes1);
x=imread('boat.bmp');
N=length(x);
fmax=255;
[X,Y]=size(x);%definir la taille_ligne et taille_colonne
b=zeros(X,Y);
%Calcul du pas de quantification
q=fmax/N;
%Calcul des valeurs quantifiées
for i=1:X
    for j=1:Y
        if x(i,j)~=fmax % si le pixel est différent de la fréquence maximale faire
            k=floor(x(i,j)/q);
        else
            k=N-1;
        end
        b(i,j)=(k+1/2)*q;
    end
end 
b=b/255;
imshow(b);%affichage de l'image uniformement quantifiée
b=abs(fft(b));
axes(handles.axes2);
% Fs = 32e3;   
% nfft = 2^nextpow2(length(b));
% Pxx = abs(fft(b,nfft)).^2/length(b)/Fs;
% % Create a single-sided spectrum
% Hpsd = dspdata.psd(Pxx(1:length(Pxx)/2),'Fs',Fs);  
% plot(Hpsd);
fmin=1.95*(10^9);% fréquence minimale donnée
fmax=2.25*(10^9);%fréquence maximale donnée
Fe=(fmax-fmin)/length(b);
f=fmin:Fe:fmax-Fe;
plot(f,b)

%Reponse impulsionnelle
axes(handles.axes4);
b1=abs(ifft(b));
t=0:1/Fe:1/Fe*(length(b)-1);
%stem(t,b1)
plot(t,b1)


function edit4_Callback(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit4 as text
%        str2double(get(hObject,'String')) returns contents of edit4 as a double


% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- If Enable == 'on', executes on mouse press in 5 pixel border.
% --- Otherwise, executes on mouse press in 5 pixel border or over edit4.
function edit4_ButtonDownFcn(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)



function Trber_Callback(hObject, eventdata, handles)
% hObject    handle to Trber (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Trber as text
%        str2double(get(hObject,'String')) returns contents of Trber as a double


% --- Executes during object creation, after setting all properties.
function Trber_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Trber (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end




% --- Executes on selection change in receivechannels.
function receivechannels_Callback(hObject, eventdata, handles)
% hObject    handle to receivechannels (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns receivechannels contents as cell array
%        contents{get(hObject,'Value')} returns selected item from receivechannels


% --- Executes during object creation, after setting all properties.
function receivechannels_CreateFcn(hObject, eventdata, handles)
% hObject    handle to receivechannels (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

% --- Executes on selection change in listbox2.
function listbox2_Callback(hObject, eventdata, handles)
% hObject    handle to listbox2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns listbox2 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from listbox2


% --- Executes during object creation, after setting all properties.
function listbox2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to listbox2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
